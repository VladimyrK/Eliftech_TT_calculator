{"version":3,"file":"static/js/497.4e2d2da4.chunk.js","mappings":"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","sources":["components/BanksListItem/BanksListItem.js","components/BanksList/BanksList.js","components/Input/Input.js","components/CalculatorForm/CalculatorForm.js","views/Calculator/Calculator.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport './BanksListItem.module.css';\n\nfunction BanksListItem({\n  id,\n  bankName,\n  interestRate,\n  maxLoan,\n  minPayment,\n  loanTerm,\n  onDeleteBank,\n  onEditBank,\n  downPayment,\n  initialLoan,\n  monthPayment,\n}) {\n  return (\n    <li>\n      <p>\n        {bankName} - Interest rate: {interestRate}%; Maximum loan: {maxLoan}$;\n        Minimum payment: {minPayment}$; Loan term: {loanTerm} months;\n      </p>\n      {downPayment && (\n        <p>\n          ----- My credit - Down payment: {downPayment}$; Initial loan:{' '}\n          {initialLoan}\n          $; Month payment: {monthPayment}$\n        </p>\n      )}\n      <button type=\"button\" onClick={() => onDeleteBank(id)}>\n        Delete\n      </button>\n      <button type=\"button\" onClick={() => onEditBank(id)}>\n        Edit\n      </button>\n    </li>\n  );\n}\n\nBanksListItem.propTypes = {\n  id: PropTypes.string,\n  bankName: PropTypes.string,\n  interestRate: PropTypes.string,\n  maxLoan: PropTypes.string,\n  minPayment: PropTypes.string,\n  loanTerm: PropTypes.string,\n  downPayment: PropTypes.string,\n  initialLoan: PropTypes.string,\n  monthPayment: PropTypes.number,\n  onDeleteBank: PropTypes.func,\n  onEditBank: PropTypes.func,\n};\n\nexport default BanksListItem;\n","import PropTypes from 'prop-types';\n\nimport BanksListItem from '../BanksListItem';\nimport './BanksList.module.css';\n\nfunction BanksList({ items, onDeleteBank, onEditBank }) {\n  return (\n    <ul>\n      {items.map(\n        ({\n          id,\n          bankName,\n          interestRate,\n          maxLoan,\n          minPayment,\n          loanTerm,\n          monthPayment,\n          downPayment,\n          initialLoan,\n        }) => (\n          <BanksListItem\n            key={id}\n            id={id}\n            bankName={bankName}\n            interestRate={interestRate}\n            maxLoan={maxLoan}\n            minPayment={minPayment}\n            loanTerm={loanTerm}\n            monthPayment={monthPayment}\n            downPayment={downPayment}\n            onDeleteBank={onDeleteBank}\n            onEditBank={onEditBank}\n            initialLoan={initialLoan}\n          />\n        )\n      )}\n    </ul>\n  );\n}\n\nBanksList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  onDeleteBank: PropTypes.func,\n  onEditBank: PropTypes.func,\n};\n\nexport default BanksList;\n","import PropTypes from 'prop-types';\n\nfunction Input({ type, placeholder = '', name, value, onChange }) {\n  return (\n    <label>\n      {name}\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Input;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CalculatorForm.module.css';\n\nimport Input from '../Input';\n\nfunction CalculatorForm({ banks, onSubmit, onCancel, editedBank }) {\n  const [downPayment, setDownPayment] = useState('');\n  const [initialLoan, setInitialLoan] = useState('');\n  const [selectedBank, setSelectedBank] = useState('');\n\n  useEffect(() => {\n    if (editedBank) {\n      setDownPayment(editedBank.downPayment);\n      setInitialLoan(editedBank.initialLoan);\n      setSelectedBank(editedBank.bankName);\n    }\n  }, [editedBank]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (selectedBank) {\n      const currentBank = banks.find(bank => bank.bankName === selectedBank);\n      const { interestRate, loanTerm, bankName, maxLoan, minPayment, id } =\n        currentBank;\n      const monthPayment =\n        (initialLoan *\n          (interestRate / 100 / 12) *\n          Math.pow(1 + interestRate / 100 / 12, loanTerm)) /\n        (Math.pow(1 + interestRate / 100 / 12, loanTerm) - 1);\n\n      onSubmit({\n        bankName,\n        interestRate,\n        maxLoan,\n        minPayment,\n        loanTerm,\n        id,\n        monthPayment,\n        downPayment,\n        initialLoan,\n      });\n      reset();\n    } else alert('Please, select bank from droplist in the form');\n  };\n\n  const reset = () => {\n    setDownPayment('');\n    setInitialLoan('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <select\n        required\n        defaultValue=\"default\"\n        onChange={e => setSelectedBank(e.currentTarget.value)}\n      >\n        <option value=\"default\" disabled>\n          Select bank\n        </option>\n        {banks.map(bank => (\n          <option key={bank.id} value={bank.bankName}>\n            {bank.bankName}\n          </option>\n        ))}\n      </select>\n      <Input\n        type=\"number\"\n        placeholder=\"$\"\n        name=\"Initial loan\"\n        value={initialLoan}\n        onChange={e => setInitialLoan(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"$\"\n        name=\"Down payment\"\n        value={downPayment}\n        onChange={e => setDownPayment(e.currentTarget.value)}\n      />\n      {editedBank ? (\n        <>\n          <button type=\"button\" onClick={() => onCancel(reset)}>\n            Cancel\n          </button>\n          <button type=\"submit\">Edit</button>\n        </>\n      ) : (\n        <button type=\"submit\">Calculate</button>\n      )}\n    </form>\n  );\n}\n\nCalculatorForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  banks: PropTypes.array,\n};\n\nexport default CalculatorForm;\n","import React, { useState, useEffect } from 'react';\n\nimport CalculatorForm from 'components/CalculatorForm/CalculatorForm';\nimport BanksList from '../../components/BanksList';\n\nimport './Calculator.module.css';\n\nexport default function Calculator({ banks }) {\n  const [editedBank, setEditedBank] = useState('');\n  const [myBanks, setMyBanks] = useState(\n    () => JSON.parse(window.localStorage.getItem('myBanks')) ?? []\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem('myBanks', JSON.stringify(myBanks));\n  }, [myBanks]);\n\n  const addBankData = data => {\n    editedBank &&\n      setMyBanks(myBanks => myBanks.filter(bank => bank.id !== editedBank.id));\n    setMyBanks(myBanks => [...myBanks, data]);\n    setEditedBank('');\n  };\n\n  const formSubmitHandler = data => {\n    if (\n      myBanks.find(\n        bank => bank.bankName.toLowerCase() === data.bankName.toLowerCase()\n      ) &&\n      !editedBank\n    ) {\n      alert('This bank name already in banks');\n    } else if (+data.maxLoan < +data.initialLoan) {\n      alert(\n        `Your initial loan is higher then maximum loan (${data.maxLoan}$) of this bank`\n      );\n    } else if (+data.minPayment > +data.downPayment) {\n      alert(\n        `Your down payment is lower then minimum down payment (${data.minPayment}$) of this bank`\n      );\n    } else {\n      addBankData(data);\n    }\n  };\n\n  const formCancelHandler = reset => {\n    setEditedBank('');\n    reset();\n  };\n\n  const onDeleteBank = id =>\n    setMyBanks(myBanks => myBanks.filter(bank => bank.id !== id));\n\n  const onEditBank = id => setEditedBank(myBanks.find(bank => bank.id === id));\n\n  return (\n    <>\n      <h1>Mortgage calculator page</h1>\n      <CalculatorForm\n        banks={banks}\n        onCancel={formCancelHandler}\n        onSubmit={formSubmitHandler}\n        editedBank={editedBank}\n      />\n      <h2>My banks</h2>\n      <BanksList\n        items={myBanks}\n        onDeleteBank={onDeleteBank}\n        onEditBank={onEditBank}\n      />\n    </>\n  );\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["id","bankName","interestRate","maxLoan","minPayment","loanTerm","onDeleteBank","onEditBank","downPayment","initialLoan","monthPayment","type","onClick","items","map","placeholder","name","value","onChange","required","banks","onSubmit","onCancel","editedBank","useState","setDownPayment","setInitialLoan","selectedBank","setSelectedBank","useEffect","reset","e","preventDefault","currentBank","find","bank","Math","pow","alert","defaultValue","currentTarget","disabled","Input","Calculator","setEditedBank","JSON","parse","window","localStorage","getItem","myBanks","setMyBanks","setItem","stringify","data","toLowerCase","filter","addBankData","BanksList","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}