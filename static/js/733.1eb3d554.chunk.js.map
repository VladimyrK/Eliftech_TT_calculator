{"version":3,"file":"static/js/733.1eb3d554.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/nanoid/index.browser.js","components/Input/Input.js","components/BankForm/BankForm.js","components/BanksListItem/BanksListItem.js","components/BanksList/BanksList.js","components/Filter/Filter.js","views/HomePage/HomePage.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import PropTypes from 'prop-types';\n\nfunction Input({ type, placeholder = '', name, value, onChange }) {\n  return (\n    <label>\n      {name}\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required\n      />\n    </label>\n  );\n}\n\nexport default Input;\n\nInput.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { nanoid } from 'nanoid';\n\nimport './BankForm.module.css';\n\nimport Input from '../Input';\n\nfunction ContactForm({ onSubmit, onCancel, editedBank }) {\n  const [bankName, setBankName] = useState('');\n  const [interestRate, setInterestRate] = useState('');\n  const [maxLoan, setMaxLoan] = useState('');\n  const [minPayment, setMinPayment] = useState('');\n  const [loanTerm, setLoanTerm] = useState('');\n  const [id, setId] = useState(() => nanoid());\n\n  useEffect(() => {\n    if (editedBank) {\n      setBankName(editedBank.bankName);\n      setInterestRate(editedBank.interestRate);\n      setMaxLoan(editedBank.maxLoan);\n      setMinPayment(editedBank.minPayment);\n      setLoanTerm(editedBank.loanTerm);\n    }\n  }, [editedBank]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setId(nanoid());\n    onSubmit(\n      { bankName, interestRate, maxLoan, minPayment, loanTerm, id },\n      reset\n    );\n  };\n\n  const reset = () => {\n    setBankName('');\n    setInterestRate('');\n    setMaxLoan('');\n    setMinPayment('');\n    setLoanTerm('');\n    setId(nanoid());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"My bank\"\n        name=\"Bank name\"\n        value={bankName}\n        onChange={e => setBankName(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"%\"\n        name=\"Interest rate\"\n        value={interestRate}\n        onChange={e => setInterestRate(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"$\"\n        name=\"Maximum loan\"\n        value={maxLoan}\n        onChange={e => setMaxLoan(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"$\"\n        name=\"Minimum down payment\"\n        value={minPayment}\n        onChange={e => setMinPayment(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"Months\"\n        name=\"Loan term\"\n        value={loanTerm}\n        onChange={e => setLoanTerm(e.currentTarget.value)}\n      />\n\n      {editedBank ? (\n        <>\n          <button type=\"button\" onClick={() => onCancel(reset)}>\n            Cancel\n          </button>\n          <button type=\"submit\">Edit</button>\n        </>\n      ) : (\n        <button type=\"submit\">Add bank</button>\n      )}\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nimport './BanksListItem.module.css';\n\nfunction BanksListItem({\n  id,\n  bankName,\n  interestRate,\n  maxLoan,\n  minPayment,\n  loanTerm,\n  onDeleteBank,\n  onEditBank,\n}) {\n  return (\n    <li>\n      <p>\n        {bankName} - Interest rate: {interestRate}%; Maximum loan: {maxLoan}$;\n        Minimum payment: {minPayment}%; Loan term: {loanTerm} months\n      </p>\n      <button type=\"button\" onClick={() => onDeleteBank(id)}>\n        Delete\n      </button>\n      <button type=\"button\" onClick={() => onEditBank(id)}>\n        Edit\n      </button>\n    </li>\n  );\n}\n\nBanksListItem.propTypes = {\n  id: PropTypes.string,\n  bankName: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default BanksListItem;\n","import PropTypes from 'prop-types';\n\nimport BanksListItem from '../BanksListItem';\nimport './BanksList.module.css';\n\nconst BanksList = ({ items, onDeleteBank, onEditBank }) => {\n  return (\n    <ul>\n      {items.map(\n        ({ id, bankName, interestRate, maxLoan, minPayment, loanTerm }) => (\n          <BanksListItem\n            key={id}\n            id={id}\n            bankName={bankName}\n            interestRate={interestRate}\n            maxLoan={maxLoan}\n            minPayment={minPayment}\n            loanTerm={loanTerm}\n            onDeleteBank={onDeleteBank}\n            onEditBank={onEditBank}\n          />\n        )\n      )}\n    </ul>\n  );\n};\n\nBanksList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default BanksList;\n","import PropTypes from 'prop-types';\n\nimport './Filter.module.css';\n\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <label>\n      Find banks by name\n      <input type=\"text\" name=\"filter\" value={value} onChange={onFilter} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\n\nimport BankForm from '../../components/BankForm';\nimport BanksList from '../../components/BanksList';\nimport Filter from '../../components/Filter';\n\nimport './HomePage.module.css';\n\nfunction HomePageView() {\n  const [banks, setBanks] = useState(\n    () => JSON.parse(window.localStorage.getItem('banks')) ?? []\n  );\n  const [filter, setFilter] = useState('');\n  const [editedBank, setEditedBank] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('banks', JSON.stringify(banks));\n  }, [banks]);\n\n  const addBankData = (data, reset) => {\n    editedBank &&\n      setBanks(banks => banks.filter(bank => bank.id !== editedBank.id));\n    setBanks(banks => [...banks, data]);\n    reset();\n    setEditedBank('');\n  };\n\n  const formSubmitHandler = (data, reset) => {\n    banks.find(\n      bank => bank.bankName.toLowerCase() === data.bankName.toLowerCase()\n    ) && !editedBank\n      ? alert('This bank name already in banks')\n      : addBankData(data, reset);\n  };\n\n  const formCancelHandler = reset => {\n    setEditedBank('');\n    reset();\n  };\n\n  const filterbanks = () => {\n    const filterToLowerCase = filter.toLowerCase();\n    return banks.filter(bank =>\n      bank.bankName.toLowerCase().includes(filterToLowerCase)\n    );\n  };\n\n  const filteredbanks = filterbanks();\n\n  return (\n    <div className=\"App\">\n      <h1>Mortgage calculator</h1>\n      <BankForm\n        onSubmit={formSubmitHandler}\n        onCancel={formCancelHandler}\n        editedBank={editedBank}\n      />\n      <h2>Banks</h2>\n      <Filter value={filter} onFilter={e => setFilter(e.currentTarget.value)} />\n      <BanksList\n        items={filteredbanks}\n        onDeleteBank={id => {\n          setBanks(banks => banks.filter(bank => bank.id !== id));\n        }}\n        onEditBank={id => {\n          setEditedBank(banks.find(bank => bank.id === id));\n        }}\n      />\n    </div>\n  );\n}\n\nexport default HomePageView;\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","type","placeholder","name","value","onChange","required","onSubmit","onCancel","editedBank","useState","bankName","setBankName","interestRate","setInterestRate","maxLoan","setMaxLoan","minPayment","setMinPayment","loanTerm","setLoanTerm","setId","useEffect","reset","e","preventDefault","currentTarget","onClick","onDeleteBank","onEditBank","items","map","onFilter","JSON","parse","window","localStorage","getItem","banks","setBanks","filter","setFilter","setEditedBank","setItem","stringify","filteredbanks","filterToLowerCase","toLowerCase","bank","includes","filterbanks","className","BankForm","data","find","alert","addBankData"],"sourceRoot":""}