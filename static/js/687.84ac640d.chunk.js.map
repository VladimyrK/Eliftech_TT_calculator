{"version":3,"file":"static/js/687.84ac640d.chunk.js","mappings":"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","sources":["components/BanksListItem/BanksListItem.js","components/BanksList/BanksList.js","components/Input/Input.js","../node_modules/nanoid/index.browser.js","components/BankForm/BankForm.js","components/Filter/Filter.js","views/HomePage/HomePage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport './BanksListItem.module.css';\n\nfunction BanksListItem({\n  id,\n  bankName,\n  interestRate,\n  maxLoan,\n  minPayment,\n  loanTerm,\n  onDeleteBank,\n  onEditBank,\n  downPayment,\n  initialLoan,\n  monthPayment,\n}) {\n  return (\n    <li>\n      <p>\n        {bankName} - Interest rate: {interestRate}%; Maximum loan: {maxLoan}$;\n        Minimum payment: {minPayment}$; Loan term: {loanTerm} months;\n      </p>\n      {downPayment && (\n        <p>\n          ----- My credit - Down payment: {downPayment}$; Initial loan:{' '}\n          {initialLoan}\n          $; Month payment: {monthPayment}$\n        </p>\n      )}\n      <button type=\"button\" onClick={() => onDeleteBank(id)}>\n        Delete\n      </button>\n      <button type=\"button\" onClick={() => onEditBank(id)}>\n        Edit\n      </button>\n    </li>\n  );\n}\n\nBanksListItem.propTypes = {\n  id: PropTypes.string,\n  bankName: PropTypes.string,\n  interestRate: PropTypes.string,\n  maxLoan: PropTypes.string,\n  minPayment: PropTypes.string,\n  loanTerm: PropTypes.string,\n  downPayment: PropTypes.string,\n  initialLoan: PropTypes.string,\n  monthPayment: PropTypes.number,\n  onDeleteBank: PropTypes.func,\n  onEditBank: PropTypes.func,\n};\n\nexport default BanksListItem;\n","import PropTypes from 'prop-types';\n\nimport BanksListItem from '../BanksListItem';\nimport './BanksList.module.css';\n\nfunction BanksList({ items, onDeleteBank, onEditBank }) {\n  return (\n    <ul>\n      {items.map(\n        ({\n          id,\n          bankName,\n          interestRate,\n          maxLoan,\n          minPayment,\n          loanTerm,\n          monthPayment,\n          downPayment,\n          initialLoan,\n        }) => (\n          <BanksListItem\n            key={id}\n            id={id}\n            bankName={bankName}\n            interestRate={interestRate}\n            maxLoan={maxLoan}\n            minPayment={minPayment}\n            loanTerm={loanTerm}\n            monthPayment={monthPayment}\n            downPayment={downPayment}\n            onDeleteBank={onDeleteBank}\n            onEditBank={onEditBank}\n            initialLoan={initialLoan}\n          />\n        )\n      )}\n    </ul>\n  );\n}\n\nBanksList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  onDeleteBank: PropTypes.func,\n  onEditBank: PropTypes.func,\n};\n\nexport default BanksList;\n","import PropTypes from 'prop-types';\n\nfunction Input({ type, placeholder = '', name, value, onChange }) {\n  return (\n    <label>\n      {name}\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Input;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { nanoid } from 'nanoid';\n\nimport './BankForm.module.css';\n\nimport Input from '../Input';\n\nfunction BankForm({ onSubmit, onCancel, editedBank }) {\n  const [bankName, setBankName] = useState('');\n  const [interestRate, setInterestRate] = useState('');\n  const [maxLoan, setMaxLoan] = useState('');\n  const [minPayment, setMinPayment] = useState('');\n  const [loanTerm, setLoanTerm] = useState('');\n  const [id, setId] = useState(() => nanoid());\n\n  useEffect(() => {\n    if (editedBank) {\n      setBankName(editedBank.bankName);\n      setInterestRate(editedBank.interestRate);\n      setMaxLoan(editedBank.maxLoan);\n      setMinPayment(editedBank.minPayment);\n      setLoanTerm(editedBank.loanTerm);\n    }\n  }, [editedBank]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setId(nanoid());\n    onSubmit(\n      { bankName, interestRate, maxLoan, minPayment, loanTerm, id },\n      reset\n    );\n  };\n\n  const reset = () => {\n    setBankName('');\n    setInterestRate('');\n    setMaxLoan('');\n    setMinPayment('');\n    setLoanTerm('');\n    setId(nanoid());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"My bank\"\n        name=\"Bank name\"\n        value={bankName}\n        onChange={e => setBankName(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"%\"\n        name=\"Interest rate\"\n        value={interestRate}\n        onChange={e => setInterestRate(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"$\"\n        name=\"Maximum loan\"\n        value={maxLoan}\n        onChange={e => setMaxLoan(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"$\"\n        name=\"Minimum down payment\"\n        value={minPayment}\n        onChange={e => setMinPayment(e.currentTarget.value)}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"Months\"\n        name=\"Loan term\"\n        value={loanTerm}\n        onChange={e => setLoanTerm(e.currentTarget.value)}\n      />\n\n      {editedBank ? (\n        <>\n          <button type=\"button\" onClick={() => onCancel(reset)}>\n            Cancel\n          </button>\n          <button type=\"submit\">Edit</button>\n        </>\n      ) : (\n        <button type=\"submit\">Add bank</button>\n      )}\n    </form>\n  );\n}\n\nBankForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n\nexport default BankForm;\n","import PropTypes from 'prop-types';\n\nimport './Filter.module.css';\n\nfunction Filter({ value, onFilter }) {\n  return (\n    <label>\n      Find banks by name\n      <input type=\"text\" name=\"filter\" value={value} onChange={onFilter} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport BankForm from '../../components/BankForm';\nimport BanksList from '../../components/BanksList';\nimport Filter from '../../components/Filter';\n\nimport './HomePage.module.css';\n\nfunction HomePage({ banks, banksSetter }) {\n  const [filter, setFilter] = useState('');\n  const [editedBank, setEditedBank] = useState('');\n\n  const addBankData = (data, reset) => {\n    editedBank &&\n      banksSetter(banks => banks.filter(bank => bank.id !== editedBank.id));\n    banksSetter(banks => [...banks, data]);\n    reset();\n    setEditedBank('');\n  };\n\n  const onDeleteBank = id =>\n    banksSetter(banks => banks.filter(bank => bank.id !== id));\n\n  const onEditBank = id => setEditedBank(banks.find(bank => bank.id === id));\n\n  const formCancelHandler = reset => {\n    setEditedBank('');\n    reset();\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('banks', JSON.stringify(banks));\n  }, [banks]);\n\n  const formSubmitHandler = (data, reset) => {\n    banks.find(\n      bank => bank.bankName.toLowerCase() === data.bankName.toLowerCase()\n    ) && !editedBank\n      ? alert('This bank name already in banks')\n      : addBankData(data, reset);\n  };\n\n  const filterbanks = () => {\n    const filterToLowerCase = filter.toLowerCase();\n    return banks.filter(bank =>\n      bank.bankName.toLowerCase().includes(filterToLowerCase)\n    );\n  };\n\n  const filteredbanks = filterbanks();\n\n  return (\n    <div className=\"App\">\n      <h1>Banks management page</h1>\n      <BankForm\n        onSubmit={formSubmitHandler}\n        onCancel={formCancelHandler}\n        editedBank={editedBank}\n      />\n      <h2>Banks</h2>\n      <Filter value={filter} onFilter={e => setFilter(e.currentTarget.value)} />\n      <BanksList\n        items={filteredbanks}\n        onDeleteBank={onDeleteBank}\n        onEditBank={onEditBank}\n      />\n    </div>\n  );\n}\n\nHomePage.propTypes = {\n  banks: PropTypes.arrayOf(PropTypes.object),\n  banksSetter: PropTypes.func,\n};\n\nexport default HomePage;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["id","bankName","interestRate","maxLoan","minPayment","loanTerm","onDeleteBank","onEditBank","downPayment","initialLoan","monthPayment","type","onClick","items","map","placeholder","name","value","onChange","required","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","onSubmit","onCancel","editedBank","useState","setBankName","setInterestRate","setMaxLoan","setMinPayment","setLoanTerm","setId","useEffect","reset","e","preventDefault","Input","currentTarget","onFilter","banks","banksSetter","filter","setFilter","setEditedBank","window","localStorage","setItem","JSON","stringify","filteredbanks","filterToLowerCase","toLowerCase","bank","includes","filterbanks","className","data","find","alert","addBankData","BanksList","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}